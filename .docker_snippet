alias up="docker compose up -d"
alias down="docker compose down"

pydocker() {
    echo 'FROM python:3.10-slim' > Dockerfile
    echo '' >> Dockerfile
    echo '# 1. uv 설치' >> Dockerfile
    echo 'RUN pip install uv' >> Dockerfile
    echo '' >> Dockerfile
    echo 'WORKDIR /app' >> Dockerfile
    echo '' >> Dockerfile
    echo '# 2. pyproject.toml & uv.lock 복사' >> Dockerfile
    echo 'COPY pyproject.toml uv.lock ./' >> Dockerfile
    echo '' >> Dockerfile
    echo '# 3. 의존성 설치 (재현성 보장)' >> Dockerfile
    echo 'RUN uv sync --frozen --no-dev' >> Dockerfile
    echo '' >> Dockerfile
    echo '# 4. 애플리케이션 복사' >> Dockerfile
    echo 'COPY . .' >> Dockerfile
    echo '' >> Dockerfile
    echo 'EXPOSE 8000' >> Dockerfile
    echo '' >> Dockerfile
    echo 'CMD ["uv", "run", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]' >> Dockerfile
}


jdocker() {
    name=${1:-app}

    echo 'FROM openjdk:21-jdk-slim' > Dockerfile
    echo '' >> Dockerfile
    echo 'WORKDIR /app' >> Dockerfile
    echo '' >> Dockerfile
    echo "ARG JAR_FILE=target/${name}.jar" >> Dockerfile
    echo '' >> Dockerfile
    echo 'COPY ${JAR_FILE} app.jar' >> Dockerfile
    echo '' >> Dockerfile
    echo 'EXPOSE 8080' >> Dockerfile
    echo '' >> Dockerfile
    echo 'ENTRYPOINT ["java", "-jar", "app.jar"]' >> Dockerfile
}

recon(){
    down
    up --build
}

dkrun() {
    port=$1
    iName=$2

    if [ -z "$port" ] || [ -z "$iName" ]; then
        echo "❌ 오류: 포트 번호와 이미지 이름을 입력하세요."
        echo "사용법: drun <Ex_port:Int_port> <image_name>"
        return 
    fi

    docker run -d -p "$port" "$iName"
}


build(){
    docker build -t "$@" .
}

rmi(){
    for image_id in $(docker images --filter "dangling=true" -q); do
        docker rmi "$image_id"
    done
}

dxc() {
    if [ -z "$1" ]; then
        echo "Usage: dxc <container_name>"
        return 1
    fi
    docker exec -it "$1" bash
}
